= Gretty configuration
Andrey Hihlovskiy
2014-05-29
:sectanchors:
:jbake-type: page
:jbake-status: published

When you apply gretty plugin, it adds +gretty+ extension to the
project. You can (but you don't have to) customize every aspect of gretty plugin
with the help of gretty DSL:

[source,groovy]
----
gretty {
  port = 8081
  contextPath = '/MyWebApp'
  // ... many more properties
}
----

All gretty tasks, when invoked on given project, use properties of gretty extension.

If you don't specify any properties in gretty extension (or omit it altogether),
gretty tasks run with reasonable defaults.

== Server-specific properties

Gretty extension supports the following server-specific properties:

[cols="1,1,1,10", options="header"]
|===
| Property
| Type
| Default
| Purpose

| [[_jvmargs]] jvmArgs
| List<String>
| []
| Additional JVM arguments to servlet-container process.

| [[_servletcontainer]] servletContainer
| String
| 'jetty9'
| Servlet container to be used in appXXX tasks. Possible values are 'jetty7', 'jetty8', 'jetty9', 'jetty93' (jdk 8 only), 'tomcat7', 'tomcat8'.

| [[_managedclassreload]] managedClassReload
| boolean
| false
| When true, Gretty gradle tasks facilitate your web-app with springloaded library, thus allowing to live-reload compiled classes and avoid restarting servlet container. +
See also: link:Hot-deployment.html[Hot deployment].

| [[_host]] host
| String
| "localhost"
| host is passed to servlet-container connectors. If you use HTTPS, host must match CN of the subject DN of the certificate (if you use link:HTTPS-support.html#_https_auto_configuration[HTTP auto-configuration], Gretty ensures this automatically).

| [[_httpenabled]] httpEnabled
| boolean
| true
| When httpEnabled is true, Gretty configures HTTP connector for the designated httpPort. Otherwise HTTP protocol is disabled. Normally either httpEnabled or httpsEnabled should be true.

| [[_httpport]] httpPort
| int
| 8080
| TCP-port used by servlet-container for incoming HTTP-requests.

| [[_port]] port
| int
| 8080
| This property is deprecated, please use httpPort instead

| [[_httpidletimeout]] httpIdleTimeout
| int
| null
| When not null, defines the time, in milliseconds, that the HTTP connection can be idle before it is closed.

| [[_httpsenabled]] httpsEnabled
| boolean
| false
| When httpsEnabled is true, Gretty configures HTTPS connector for the designated httpsPort. Otherwise HTTPS protocol is disabled. Normally either httpEnabled or httpsEnabled should be true. +
See also: link:HTTPS-support.html[HTTPS support].

| [[_httpsport]] httpsPort
| int
| 8443
| TCP-port used by servlet-container for incoming HTTPS-requests. +
**Attention:** setting httpsPort alone is not enough to enable HTTPS protocol. You must set httpsEnabled=true in order to enable HTTPS.

| [[_sslkeystorepath]] sslKeyStorePath
| String or java.io.File
| null
| Absolute or relative path to the key-store, containing key and certificate for HTTPS connection. If sslKeyStorePath is not specified, all other SSL-related properties are ignored and HTTPS is auto-configured (if it is enabled). +
See also: link:HTTPS-support.html#_https_manual_configuration[HTTPS manual configuration]

| [[_sslkeystorepassword]] sslKeyStorePassword
| String
| null
| Password for the key-store designated by property sslKeyStorePath. +
See also: link:HTTPS-support.html#_https_manual_configuration[HTTPS manual configuration]

| [[_sslkeymanagerpassword]] sslKeyManagerPassword
| String
| sslKeyStorePassword
| Password for the key of this host, stored in key-store designated by property sslKeyStorePath. +
See also: link:HTTPS-support.html#_https_manual_configuration[HTTPS manual configuration]

| [[_ssltruststorepath]] sslTrustStorePath
| String or java.io.File
| sslKeyStorePath
| Absolute or relative path to the trust-store for HTTPS connection.  +
See also: link:HTTPS-support.html#_https_manual_configuration[HTTPS manual configuration]

| [[_sslkeystorepassword]] sslKeyStorePassword
| String
| null
| Password for the key-store designated by property sslKeyStorePath. +
See also: link:HTTPS-support.html#_https_manual_configuration[HTTPS manual configuration]

| [[_sslneedclientauth]] sslNeedClientAuth
| boolean
| false
| Specify if client auth is required

| [[_httpsidletimeout]] httpsIdleTimeout
| int
| null
| When not null, defines the time, in milliseconds, that the HTTPS connection can be idle before it is closed.

| [[_serverconfigfile]] serverConfigFile
| String or java.io.File
| "jetty.xml" or "tomcat.xml"
| Name and/or location of servlet-container-specific server configuration file. +
See also: link:jetty.xml-support.html[jetty.xml support] and link:tomcat.xml-support.html[tomcat.xml support].

| [[_jettyxmlfile]] jettyXmlFile
| String or java.io.File
| "jetty.xml"
| This property is deprecated, please use serverConfigFile instead.

| [[_scaninterval]] scanInterval
| int
| 1
| Hot-deployment scan interval, in seconds. +
See also: link:Hot-deployment.html[Hot deployment].

| [[_logbackconfigfile]] logbackConfigFile
| String
| "logback.groovy" or "logback.xml"
| Absolute or relative path to logback configuration file (.groovy or .xml). +
See also: link:Logging.html[Logging].

| [[_logginglevel]] loggingLevel
| String
| "INFO"
| slf4j logging-level for servlet-container process. +
See also: link:Logging.html[Logging].

| [[_consolelogenabled]] consoleLogEnabled
| boolean
| true
| Defines whether log messages are written to the terminal. +
See also: link:Logging.html[Logging].

| [[_filelogenabled]] fileLogEnabled
| boolean
| true
| Defines, whether log messages are written to the log-file. +
See also: link:Logging.html[Logging].

| [[_logfilename]] logFileName
| String
| "${project.name}.log"
| Log file name (without path). +
See also: link:Logging.html[Logging].

| [[_logdir]] logDir
| String
| "${user.home}/logs"
| Directory, where the log file is created. +
See also: link:Logging.html[Logging].

| [[_onstart]] onStart
| function(Closure)
| -
| Adds closure to be called just before servlet-container is started.

| [[_onstop]] onStop
| function(Closure)
| -
| Adds closure to be called just after servlet-container is stopped.

| [[_onscan]] onScan
| function(Closure)
| -
| Adds closure to be called on hot-deployment scan. +
See also: link:Hot-deployment.html[Hot deployment].

| [[_onscanfileschanged]] onScanFilesChanged
| function(Closure)
| -
| Adds closure to be called whenever hot-deployment detects that files or folders were changed. +
See also: link:Hot-deployment.html[Hot deployment].

| [[_serviceport]] servicePort
| int
| 9900
| TCP-port used by Gretty to send commands to servlet-container process.

| [[_statusport]] statusPort
| int
| 9901
| TCP-port used by servlet-container process to send status back to Gretty.

| [[_interactivemode]] interactiveMode
| String
| stopOnKeyPress
| Defines Gretty's reaction on user keypress. When 'stopOnKeyPress', any keypress stops running web-server. When 'restartOnKeyPress', any keypress causes web-server restart. When 'rebuildAndRestartOnKeyPress', any keypress causes Gretty to rebuild web-apps and then restart web-server. +
Note that interactiveMode only affects interactive tasks: appRun, appRunDebug, farmRun, farmRunDebug etc. Tasks having word "start" in their name are non-interactive and must be stopped by respective stop tasks. See more information on Gretty tasks link:Gretty-tasks.html[here].

| [[_springbootversion]] springBootVersion
| String
| 1.1.7.RELEASE
| Defines which version of SpringBoot must be used with the given web-server/web-app.

| [[_enablenaming]] enableNaming
| boolean
| false
| When true, Tomcat supports JNDI resource naming.

| [[_redeploymode]] redeployMode
| String
| restart
| Defines Gretty behaviour on application redeployment. When 'restart' gretty simply restarts servlet container. When 'redeploy' gretty redeploys web application on servlet container. Redeploy is useful when multiple application is started in farm mode.

| [[_scanner]] scanner
| String
| jetty
| Switch between jetty and jdk scanners. 'jetty' is scan-based and 'jdk' is notify-based (jdk 7).

| [[_auxPortRange]] auxPortRange
| List<Integer>
| null
| If specified gretty will pick service and status port from it.

| [[_portPropertiesFileName]] portPropertiesFileName
| String
| gretty_port.properties
| Specifies name of file for gretty service and status port.
|===

== Web-app-specific properties

Gretty extension supports the following web-app-specific properties:

[cols="1,1,1,6", options="header"]
|===
| Property
| Type
| Default
| Purpose

| [[_contextpath]] contextPath
| String
| "/${project.name}"
| Context path for the web-app. +
contextPath affects only gretty tasks.
If you assemble WAR file and deploy it to some servlet container, you must define context
path by means of that container.

| [[__beforeclasspath] beforeClassPath
| function(URL... url)
| -
| Adds classpath entry before web-app classpath +
beforeClassPath affects only gretty tasks (not the generated WAR files or products).

| [[__classpath]] classPath
| function(URL url)
| -
| Add classpath entry to the web-app. +
classPath affects only gretty tasks (not the generated WAR files or products).

| [[_initparameter]] initParameter
| function(String key, String value)
| -
| Adds web-app initialization parameter. +
It has the same meaning/effect as +/web-app/servlet/init-param+ element in "web.xml". 
initParameter affects only gretty tasks.
If you assemble WAR file and deploy it to some servlet container, you must define init-parameters
in "web.xml".

| [[_contextconfigfile]] contextConfigFile
| String or java.io.File
| "jetty-env.xml" or "tomcat-context.xml"
| Name and/or location of servlet-container-specific context configuration file. +
See also: link:jetty-env.xml-support.html[jetty-env.xml support] and link:tomcat-context.xml-support.html[tomcat-context.xml support].

| [[_jettyenvxmlfile]] jettyEnvXmlFile
| String or java.io.File
| "jetty-env.xml"
| This property is deprecated, please use contextConfigFile instead.

| [[_realm]] realm
| String
| null
| Security realm for the given web-app. +
See also: link:Jetty-security-realms.html[Jetty security realms] and link:Tomcat-security-realms.html[Tomcat security realms].

| [[_realmconfigfile]] realmConfigFile
| String or java.io.File
| "jetty-realm.properties" or "tomcat-users.xml"
| Contains security realm properties for the given web-app. +
See also: link:Jetty-security-realms.html[Jetty security realms] and link:Tomcat-security-realms.html[Tomcat security realms].

| [[_scandir]] scanDir
| function(String) or function(java.io.File)
| -
| Adds a directory to the list of directories scanned by hot-deployment. +
See also: link:Hot-deployment.html[Hot deployment].

| [[_fastreload]] fastReload 
| boolean or function(String) or function(java.io.File) or function(Map)
| true
| Adds folders to be fast-reloaded on change, i.e. copied to running web-app without restarting web-app. +
See also: link:Fast-reload.html[Fast reload].

| [[_recompileonsourcechange]] recompileOnSourceChange
| boolean
| true
| Should the given web-app automatically recompile on source change? +
See also: link:Hot-deployment.html[Hot deployment].

| [[_reloadonclasschange]] reloadOnClassChange
| boolean
| true
| Should the given web-app automatically reload when it's compiled classes change? +
See also: link:Hot-deployment.html[Hot deployment].

| [[_reloadonconfigchange]] reloadOnConfigChange
| boolean
| true
| Should the given web-app automatically reload when configuration files (either in WEB-INF or META-INF) change? +
See also: link:Hot-deployment.html[Hot deployment].

| [[_reloadonlibchange]] reloadOnLibChange
| boolean
| true
| Should the given web-app automatically reload when library files (either in WEB-INF/lib or in maven dependencies) change? +
See also: link:Hot-deployment.html[Hot deployment].

| [[_inplacemode]] inplaceMode
| String
| "soft"
| Can be "soft" or "hard" (default "soft"). When "hard", the web-server serves the resources (of the given web-app) directly 
from src/main/webapp. When "soft", the web-server serves the resources (of the given web-app) from build/inplaceWebapp. +
Attention: `inplaceMode="hard"` effectively disables link:Web-app-overlays.html[webapp overlays] and link:Web-app-filtering.html[webapp filtering]. +
See also: link:Hot-deployment.html[Hot deployment].

| [[_overlay]] overlay
| function(String) or function(Project)
| -
| Adds another project (in the same project tree) as overlay source. +
See also: link:Web-app-overlays.html[Web-app overlays].

| [[_integrationtesttask]] integrationTestTask
| String
| "integrationTest"
| Name of gradle task in the same project, which gretty "encloses" with servlet-container start/stop. +
See also: link:Integration-tests-support.html[Integration tests support].
|===

